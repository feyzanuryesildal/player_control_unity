using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class ses : MonoBehaviour
{
    public Sprite[] beklemeAnim;
    public Sprite[] ziplamaAnim;
    public Sprite[] yurumeAnim;

    SpriteRenderer spriteRendere;
    Rigidbody2D fizik;
    Vector3 vec;

    
    public float speed = 10;
    bool birKereZipla = true;

    float horizontal = 0;
    float beklemeAnimZaman = 0;
    float yurumeAnimZaman = 0;

    int beklemeAnimSayac=0;
    int yurumeAnimSayac=0;

    void Start()
    {
        spriteRendere = GetComponent<SpriteRenderer>();
        fizik = GetComponent<Rigidbody2D>();
    }
    private void Update()
    {
        if (Input.GetKeyDown(KeyCode.Space))
        {
            if (birKereZipla)
            {
                fizik.AddForce(new Vector2(0, 500));
                birKereZipla = false;
            }
            
        }
    }

    void FixUpdate()
    {
        Animasyon();
        karakterHaraket();
    }

    void karakterHaraket()
    {
        horizontal = Input.GetAxisRaw("Horizontal");
        vec = new Vector3(horizontal * speed, fizik.velocity.y, 0);
        fizik.velocity = vec;
    }
    private void OnCollisionEnter2D(Collision2D collision)
    {
        birKereZipla = true;
    }

    void Animasyon()
    {
        if (!birKereZipla)
        {
            if (horizontal == 0)
            {
                beklemeAnimZaman += Time.deltaTime;
                if (beklemeAnimZaman > 0.05f)
                {
                    spriteRendere.sprite = beklemeAnim[beklemeAnimSayac++];
                    if (beklemeAnimSayac == beklemeAnim.Length)
                    {
                        beklemeAnimSayac = 0;
                    }
                    beklemeAnimZaman = 0;

                }

            }
            else if (horizontal < 0)
            {
                yurumeAnimZaman += Time.deltaTime;
                if (yurumeAnimZaman > 0.01f)
                {
                    spriteRendere.sprite = yurumeAnim[beklemeAnimSayac++];
                    if (yurumeAnimSayac == yurumeAnim.Length)
                    {
                        yurumeAnimSayac = 0;
                    }
                    yurumeAnimZaman = 0;

                }
                transform.localScale = new Vector3(1, 1, 1);
            }
            else if (horizontal > 0)
            {
                yurumeAnimZaman += Time.deltaTime;
                if (yurumeAnimZaman > 0.01f)
                {
                    spriteRendere.sprite = yurumeAnim[beklemeAnimSayac++];
                    if (yurumeAnimSayac == yurumeAnim.Length)
                    {
                        yurumeAnimSayac = 0;
                    }
                    yurumeAnimZaman = 0;

                }
                transform.localScale = new Vector3(-1, 1, 1);
            }
        }
        else
        {
            // yukarı ve aşağı için ayrı animasyon varsa kullan

            if (fizik.velocity.y > 0)
            {
                spriteRendere.sprite = ziplamaAnim[];
            } else
            {
                spriteRendere.sprite = ziplamaAnim[];
            }
            if (horizontal > 0)
            {
                transform.localScale = new Vector3(-1, 1, 1);
            } else
            {
                transform.localScale = new Vector3(1, 1, 1);
            }
        }
        

    }
}
